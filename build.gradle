group 'com.gens'

allprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'pmd'
    apply plugin: 'findbugs'

    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url 'https://artifactory.epam.com/artifactory/GENS-GENP/'
            credentials {
                username System.getenv('AUTO_GENS_GENP_CI_USER')
                password System.getenv('AUTO_GENS_GENP_CI_PASSWORD')
            }
        }
    }

    publishing {
        repositories {
            maven {
                url 'https://artifactory.epam.com/artifactory/GENS-GENP/'
                credentials {
                    username System.getenv('AUTO_GENS_GENP_CI_USER')
                    password System.getenv('AUTO_GENS_GENP_CI_PASSWORD')
                }
            }
        }
    }

    pmd {
        ignoreFailures = true
        sourceSets = [sourceSets.main]
        reportsDir = file("$project.buildDir/reports/pmd")
        ruleSets = [
                'java-basic',
                'java-braces',
                'java-clone',
                'java-codesize',
//            'java-comments',
//            'java-controversial',
//            'java-coupling',
//            'java-design',
                'java-empty',
//            'java-finalizers',
                'java-imports',
//            'java-j2ee',
//            'java-javabeans',
//            'java-junit',
//            'java-logging-jakarta-commons',
//            'java-logging-java',
//            'java-migrating',
//            'java-naming',
//            'java-optimizations',
                'java-strictexception',
                'java-strings',
                'java-sunsecure',
//            'java-typeresolution',
                'java-unnecessary',
                'java-unusedcode'
        ]
    }

    findbugs {
        ignoreFailures = true
        sourceSets = [sourceSets.main]
        reportsDir = file("$project.buildDir/reports/findbugs")
        effort = "max"
    }
}
