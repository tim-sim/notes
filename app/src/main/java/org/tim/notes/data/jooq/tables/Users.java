/*
 * This file is generated by jOOQ.
*/
package org.tim.notes.data.jooq.tables;


import org.jooq.Record;
import org.jooq.TableField;

import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
public class Users extends PostgresTableImpl {

    private static final long serialVersionUID = 1228068813;

    /**
     * The reference instance of <code>public.users</code>
     */
    public static final Users USERS = new Users();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Record> getRecordType() {
        return Record.class;
    }

    /**
     * The column <code>public.users.id</code>.
     */
    public final TableField<Record, UUID> ID = createField("id", org.jooq.impl.SQLDataType.UUID.nullable(false).defaultValue(org.jooq.impl.DSL.field("uuid_generate_v4()", org.jooq.impl.SQLDataType.UUID)), this);

    /**
     * The column <code>public.users.user_name</code>.
     */
    public final TableField<Record, String> USER_NAME = createField("user_name", org.jooq.impl.SQLDataType.CLOB.nullable(false), this);

    /**
     * The column <code>public.users.password</code>.
     */
    public final TableField<Record, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.CLOB.nullable(false), this);

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled.
     */
    @java.lang.Deprecated
    public final TableField<Record, Object> DOC = createField("doc", org.jooq.impl.DefaultDataType.getDefaultDataType("jsonb"), this);

    /**
     * Create a <code>public.users</code> table reference
     */
    public Users() {
        super("users", "public");
    }
}
